name: Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test-stub:
    name: Build and Test (Stub Implementation)
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'
    
    - name: Download dependencies
      run: |
        # Force clean slate by removing go.sum
        rm -f go.sum
        # Download dependencies
        go mod download
        # Try to tidy dependencies
        go mod tidy
    
    - name: Build with stub implementation
      run: |
        mkdir -p bin
        CGO_ENABLED=0 go build -v -o bin/otel-ai-processor ./cmd/processor
    
    - name: Run tests
      run: |
        go test -v -short ./pkg/processor/...
    
    - name: Archive binaries
      uses: actions/upload-artifact@v3
      with:
        name: otel-ai-processor-stub
        path: bin/otel-ai-processor

  build-and-test-wasm:
    name: Build and Test (WASM Implementation)
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    
    - name: Build WASM models
      run: |
        cd wasm-models
        npm install
        npm run asbuild
        cd ..
        mkdir -p models
        cp wasm-models/error-classifier/build/error-classifier.wasm models/
        cp wasm-models/importance-sampler/build/importance-sampler.wasm models/
        cp wasm-models/entity-extractor/build/entity-extractor.wasm models/
    
    - name: Download dependencies
      run: |
        # Force clean slate by removing go.sum
        rm -f go.sum
        # Download dependencies
        go mod download
        # Try to tidy dependencies
        go mod tidy
        # Get wasmer-go specifically
        go get -v github.com/wasmerio/wasmer-go/wasmer
    
    - name: Install compiler dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc g++ make
    
    - name: Build with WASM implementation
      run: |
        mkdir -p bin
        CGO_ENABLED=1 go build -v -tags=fullwasm -o bin/otel-ai-processor-wasm ./cmd/processor
    
    - name: Run WASM tests
      run: |
        go test -v -tags=fullwasm ./pkg/processor/tests/...
    
    - name: Archive WASM binaries
      uses: actions/upload-artifact@v3
      with:
        name: otel-ai-processor-wasm
        path: bin/otel-ai-processor-wasm